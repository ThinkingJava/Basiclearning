当Redis所用内存达到maxmemory上限时会触发相应的溢出控制策略。
具体策略受maxmemory-policy参数控制，Redis支持6种策略，如下所示：
1）noeviction：默认策略，不会删除任何数据，拒绝所有写入操作并返
回客户端错误信息（error）OOM command not allowed when used memory，此
时Redis只响应读操作。
2）volatile-lru：根据LRU算法删除设置了超时属性（expire）的键，直
到腾出足够空间为止。如果没有可删除的键对象，回退到noeviction策略。
3）allkeys-lru：根据LRU算法删除键，不管数据有没有设置超时属性，
直到腾出足够空间为止。
4）allkeys-random：随机删除所有键，直到腾出足够空间为止。
5）volatile-random：随机删除过期键，直到腾出足够空间为止。
6）volatile-ttl：根据键值对象的ttl属性，删除最近将要过期数据。如果
没有，回退到noeviction策略。
内存溢出控制策略可以采用config set maxmemory-policy{policy}动态配
置。Redis支持丰富的内存溢出应对策略，可以根据实际需求灵活定制，比
如当设置volatile-lru策略时，保证具有过期属性的键可以根据LRU剔除，而
未设置超时的键可以永久保留。还可以采用allkeys-lru策略把Redis变为纯缓
存服务器使用。当Redis因为内存溢出删除键时，可以通过执行info stats命令
查看evicted_keys指标找出当前Redis服务器已剔除的键数量。