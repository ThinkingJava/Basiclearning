第一，纯内存访问，Redis将所有数据放在内存中，内存的响应时长大
约为100纳秒，这是Redis达到每秒万级别访问的重要基础。
第二，非阻塞I/O，Redis使用epoll作为I/O多路复用技术的实现，再加上
Redis自身的事件处理模型将epoll中的连接、读写、关闭都转换为事件，不
在网络I/O上浪费过多的时间。
第三，单线程避免了线程切换和竞态产生的消耗。
既然采用单线程就能达到如此高的性能，那么也不失为一种不错的选
择，因为单线程能带来几个好处：第一，单线程可以简化数据结构和算法的
实现。如果对高级编程语言熟悉的读者应该了解并发数据结构实现不但困难
而且开发测试比较麻烦。第二，单线程避免了线程切换和竞态产生的消耗，
对于服务端开发来说，锁和线程切换通常是性能杀手。